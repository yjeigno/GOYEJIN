# JPA에 접근하기 위한 프로퍼티들을 세팅
# yaml 은 xml 이나 jason 같이 데이터를 주고 받을 때 사용하는 포맷이 정의 되어 있는 파일 형식.
# xml이나 jason 보다 코드가 간결하다. 쿠버네티스에서도 야물을 권장하고 있다.

debug: false # 스프링 부트의 모든 디버그 로그를 다 볼 수 있게 할 건지 말 건지 결정, 너무 많아서 일단 false 로 놓고 할 거임.
management.endpoints.web.exposure.include: "*" # actuator 의 endpoint 의 감춰져 있는 것들을 다 볼 수 있게 한다. (그래야 개발할 때 보고 싶은 기능을 다 볼 수 있다.)

logging:
  level:
    com.com.bitstudy.app: debug # 루트패키지에서 발행하는 모든 로그는 debug 레벨로 보겠다는 뜻
    org.springframework.web.servlet: debug # 맨 위에 debug 와 관련 있는 건데, 위에 거를 false 놓고 request, response 로그만 따로 뽑아보겠다는 뜻
    org.hibernate.type.descriptor.sql.BasicBinder: trace # JPA 기술을 사용할 때 쿼리 로그를 디버그 로그로 관찰할 수 있는데 이때 안에 들어가는 파라미터들이 다 물음표로 나온다. 그걸 볼 수 있게 해 주는 것. (TODO: 이슈 확인 필요)

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/board
    username: bitstudy
    password: gkfntkap070
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true # test 용 데이터베이스의 데이터를 생성할 수 있게 해줌. 나중에 resources 안에 data.sql(무조건 있어야 함) 파일 만들어서 DB에 초기 데이터를 테스트용으로 넣을 수 있다.
    hibernate.ddl-auto: create # 엔티티를 보고 테이블 데이터를 유추해서 자동으로 DDL 데이터를 만들어 준다. domain > Article 엔티티를 보고 create tale 구문을 만들어서 테스트 실행될 때마다 자동으로 Article ArticleComment 테이블을 생성. (우리가 별도로 하지 않아도 됨)
    show-sql: true # 디버그 모드에서 sql 문장 보여줄까? 하는 거
    properties:
      hibernate.format_sql: true # h2 콘솔을 활성화 할 건지 정하는 부분
      hibernate.default_batch_fetch_size: 100 # data.sql 를 언제 작동하게 할 건지 결정하는 부분
      # never(절대 사용 언 함), always(리얼 환경 포함해서 테스트까지), embedded(테스트 할 때만)
      # 강의 예제니까 실제 화면에서 볼 때도 테스트 때 사용했던 데이터들도 이용할 거라고 그냥 always 로 합시다.